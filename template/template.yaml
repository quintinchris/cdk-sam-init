Transform:
  - AWS::Serverless-2016-10-31
AWSTemplateFormatVersion: "2010-09-09"
Resources:
  SamMicroserviceTemplateSamMicroserviceAB14B6B8:
    Type: AWS::Serverless::Api
    Properties:
      AccessLogSetting:
        DestinationArn:
          Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:ApiGw-Access-Logs-${SamMicroservice}/prod
        Format: '{"requestTime":"$context.requestTime","requestId":"$context.requestId","httpMethod":"$context.httpMethod","path":"$context.path","routeKey":"$context.routeKey","status":"$context.status","requestTime":"$context.requestTime",}'
      Auth:
        AddDefaultAuthorizerToCorsPreflight: false
      Cors:
        AllowHeaders: "'*'"
        AllowMethods: "'*'"
        AllowOrigin: "'*'"
      DefinitionBody:
        openapi: 3.0.0
        info: {}
        schemes: https
        servers:
          variables:
            basePath:
              default: /prod
        x-amazon-apigateway-policy:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal: "*"
              Action:
                - execute-api:Invoke
              Resource: execute-api:/*
        paths:
          - /hello:
              get:
                operationId: helloWorld
                x-amazon-apigateway-integration:
                  type: aws_proxy
                  httpMethod: GET
                  passthroughBehavior: never
                  uri:
                    Fn::Join:
                      - ""
                      - - "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:"
                        - Ref: AWS::Region
                        - ":"
                        - Ref: AWS::AccountId
                        - :function:helloWorld/invocations
                x-amazon-apigateway-request-validator: all
              options:
                consumes:
                  - application/json
                produces:
                  - application/json
                responses:
                  "200":
                    description: Ok
                    headers:
                      Access-Control-Allow-Origin: "'*'"
                      Access-Control-Allow-Headers: "'*'"
                      Access-Control-Allow-Credentials: "'*'"
                x-amazon-apigateway-integration:
                  type: mock
                  contentHandling: CONVERT_TO_TEXT
                  passthroughBehavior: never
                  requestTemplates:
                    application/json: '{"statusCode": 200}'
                  responses:
                    default:
                      statusCode: 200
                      responseParameters:
                        method.response.header.Access-Control-Allow-Headers: "'*'"
                        method.response.header.Access-Control-Allow-Origin: "'*'"
                        method.response.header.Access-Control-Allow-Credentials: "'*'"
      MethodSettings:
        - CachingEnabled: false
          DataTraceEnabled: true
          MetricsEnabled: true
          HttpMethod: "*"
          LoggingLevel: INFO
          ResourcePath: /*
      StageName: prod
      TracingEnabled: true
    DependsOn:
      - SamMicroserviceTemplatehelloWorld0A2D0603
  SamMicroserviceTemplatehelloWorld0A2D0603:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build/src/handlers/helloWorld
      Events:
        helloWorld:
          Properties:
            Method: get
            Path: /hello
            RestApiId:
              Ref: SamMicroserviceTemplateSamMicroserviceAB14B6B8
          Type: Api
      FunctionName: helloWorld
      Handler: helloWorld.handler
      Runtime: nodejs18.x
      Tracing: Active
  SamMicroserviceTemplatehelloWorldLogGroup4C95C77F:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: helloWorldLogGroup
      RetentionInDays: 30
Outputs:
  SamMicroserviceTemplateAPIGatewayUrlC1815F26:
    Description: HTTP endpoint to execute your API functions
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: SamMicroserviceTemplateSamMicroserviceAB14B6B8
          - .execute-api.
          - Ref: AWS::Region
          - .amazonaws.com/prod
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

